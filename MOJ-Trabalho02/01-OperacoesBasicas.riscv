#ENUNCIADO: https://moj.naquadah.com.br/contests/ta_fac_t2_2023_2/operacoesbasicas2.html
#a2 = a; a3 = b; a4 = c;

.data
input1: .asciz "Digite o valor de A: "
input2: .asciz "Digite o valor de B: "
input3: .asciz "Digite o valor de C: "
ADD:      .string "ADD:" 	#String ADD
SUB: .string "SUB:" 	#String SUB
AND:       .string "AND: " 	#String AND
OR:        .string "OR: " 	#String OR
XOR:       .string "XOR: " 	#String XOR
MASK:      .string "MASK: " 	#String MASK
SLL1:      .string "SLL(" 	#String SLL
SLL2:      .string "): " 	#String SLL
SRL1:      .string "SRL(" 	#String SRL
SRL2:      .string "): " 	#String SRL
LineBreak: .string "\n"

.text
.globl main 

main: 
# imprimir o input1
li a7, 4
la a0, input1
ecall 

# inserir o valor 1
li a7, 5 #código de ecall "5" lê um inteiro
ecall
addi a2,a0,0 #move o primeiro valor (a) para a2

# imprimir o input2
li a7, 4
la a0, input2
ecall 

# inserir o valor 2
li a7, 5 #código de ecall "5" lê um inteiro
ecall 
addi a3, a0, 0 #move o segundo valor (b) para a3

# imprimir o input3
li a7, 4
la a0, input3
ecall 

# inserir o valor 3
li a7, 5 #código de ecall "5" lê um inteiro
ecall
addi a4, a0, 0 #move o terceiro valor (c) para a4

Sum: 
add t3, a2, a3 #t3 = a2 + a3
la a0, ADD #adiciona a string ADD no a0
li a7, 4 #o código de ecall "4" imprime string
ecall
addi a0, t3, 0 #a0 = t3
li a7, 1 # o código de ecall "1" imprime um inteiro
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall
#ret #retorna pra depois da funcao soma

Subtraction:
sub t4, a2, a3 #t4 = a2-a3
la a0, SUB #adiciona a string SUB no a0
li a7, 4 #o código de ecall "4" imprime string
ecall
addi a0, t4, 0
li a7, 1
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall
#ret #retorna pra depois da funcao soma

LogicAnd:
and t5, a2, a3 #t5 = a2 && a3
la a0, AND #adiciona a string AND no a0
li a7, 4 #o código de ecall "4" imprime string
ecall
addi a0, t5, 0
li a7, 1
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

LogicOr:
or t6, a2, a3 #t6 = a2 || a3
la a0, OR #adiciona a string OR no a0
li a7, 4 #o código de ecall "4" imprime string
ecall
addi a0, t6, 0
li a7, 1 
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

LogicXor:
xor t0, a2, a3 #t0 = a2 xor a3
la a0, XOR
li a7, 4
ecall
addi a0, t0, 0
li a7, 1
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

MaskOperation:
andi a6, a4, 31
la a0, MASK
li a7, 4
ecall
addi a0, a6, 0
li a7, 1
ecall 
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

LogicSLL:
sll t1, a2, a6
#imprimir parenteses com numero da mascara
la a0, SLL1
li a7, 4
ecall
addi a0, a6, 0
li a7, 1
ecall
la a0, SLL2
li a7, 4
ecall 
#imprimir valor do sll
addi a0, t1, 0
li a7, 1
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

LogicSRL:
srl t2, a3, a6
#imprimir parenteses com numero da mascara
la a0, SRL1
li a7, 4
ecall
addi a0, a6, 0
li a7, 1
ecall
la a0, SRL2
li a7, 4
ecall 
#imprimir valor do sll
addi a0, t2, 0
li a7, 1
ecall
#Quebra Linha
la a0, LineBreak
li a7, 4
ecall

EndProgram:
addi    a0, zero, 0   # Return 0;
addi    a7, zero, 93  # Termina o programa
ecall
